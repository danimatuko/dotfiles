#!/usr/bin/env bash

# Determine the absolute path of the dotfiles directory
DOTFILES=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)

# Kitty terminal configuration
# Remove any existing configuration and create a symbolic link to the dotfiles directory
rm -rf $HOME/.config/kitty
ln -s $DOTFILES/kitty $HOME/.config/kitty

# Tmux configuration
# Remove any existing .tmux.conf file and create a symbolic link to the dotfiles directory
rm -rf $HOME/.tmux.conf
ln -s $DOTFILES/tmux/tmux.conf $HOME/.tmux.conf

# Create the .local/bin directory if it doesn't exist
mkdir -p $HOME/.local/bin

# Tmux switcher script
# Remove any existing script and create a symbolic link to the dotfiles directory
rm -rf $HOME/.local/bin/tmux-switcher
ln -s $DOTFILES/scripts/tmux-switcher $HOME/.local/bin/tmux-switcher

# Neovim configuration
# Remove any existing Neovim configuration and create a symbolic link to the dotfiles directory
rm -rf $HOME/.config/nvim
ln -s $DOTFILES/nvim $HOME/.config/nvim

# Phpactor configuration
# Remove any existing Phpactor configuration and create a symbolic link to the dotfiles directory
rm -rf $HOME/.config/phpactor
ln -s $DOTFILES/phpactor $HOME/.config/phpactor

# Install Phpactor dependencies using Composer
PHP_ACTOR_DIR="$HOME/.local/share/nvim/lazy/phpactor"

# Check if the Phpactor directory exists before attempting to install dependencies
if [ -d "$PHP_ACTOR_DIR" ]; then
    echo "Installing Phpactor dependencies..."
    cd "$PHP_ACTOR_DIR"
    composer install --no-dev -o
else
    echo "Phpactor directory not found. Please ensure the plugin is installed via Neovim and run this script again."
fi

